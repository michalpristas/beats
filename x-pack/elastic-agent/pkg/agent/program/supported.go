// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by x-pack/dev-tools/cmd/buildspec/buildspec.go - DO NOT EDIT.

package program

import (
	"strings"

	"github.com/elastic/beats/v7/x-pack/elastic-agent/pkg/packer"
)

var Supported []Spec
var SupportedMap map[string]Spec

func init() {
	// Packed Files
	// spec/apm-server.yml
	// spec/endpoint.yml
	// spec/filebeat.yml
	// spec/heartbeat.yml
	// spec/metricbeat.yml
	// spec/packetbeat.yml
	unpacked := packer.MustUnpack("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")
	SupportedMap = make(map[string]Spec)

	for f, v := range unpacked {
		s, err := NewSpecFromBytes(v)
		if err != nil {
			panic("Cannot read spec from " + f)
		}
		Supported = append(Supported, s)
		SupportedMap[strings.ToLower(s.Cmd)] = s
	}
}
